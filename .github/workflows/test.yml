name: Valgrind Tests
# only one can run at a time
concurrency:
  # If PR, cancel prev commits. head_ref = source branch name on pull_request, null if push
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20]
    steps:
      # <common-build> - Uses YAML anchors in the future
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node}}
          check-latest: true
          cache: yarn
      - name: Node.js version
        id: node
        run: echo "v8CppApiVersion=$(node --print "process.versions.modules")" >> $GITHUB_OUTPUT
      - name: Restore build
        uses: actions/cache/restore@v3
        id: cache-build-restore
        with:
          path: |
            node_modules
            packages/*/node_modules
            lib/
            packages/*/lib
            packages/*/.git-data.json
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ github.sha }}
      - name: Install & build
        if: steps.cache-build-restore.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile && yarn build
      - name: Build
        if: steps.cache-build-restore.outputs.cache-hit == 'true'
        run: yarn build
      - name: Check Build
        run: yarn check-build
      - name: Test root binary exists
        run: ./lodestar --version
      - name: Reject yarn.lock changes
        run: .github/workflows/scripts/reject_yarn_lock_changes.sh
        # Run only on forks
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository }}
      - name: Cache build artifacts
        uses: actions/cache@master
        id: cache-build
        with:
          path: |
            node_modules
            packages/*/node_modules
            lib/
            packages/*/lib
            packages/*/.git-data.json
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ github.sha }}

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node}}
          check-latest: true
          cache: yarn
      - name: Restore build cache
        id: cache-primes-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
            lib/
            packages/*/lib
            packages/*/.git-data.json
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ github.sha }}
          fail-on-cache-miss: true

      # # Cache validator slashing protection data tests
      # - name: Restore spec tests cache
      #   uses: actions/cache@master
      #   with:
      #     path: packages/validator/spec-tests
      #     key: spec-test-data-${{ hashFiles('packages/validator/test/spec/params.ts') }}
      - name: Setup Valgring
        run: |
          id -a
          sudo apt -y install valgrind
      - name: Unit tests
        run: |
          valgrind --leak-check=full \
          --show-leak-kinds=all \
          --track-origins=yes \
          --verbose \
          yarn test:unit

